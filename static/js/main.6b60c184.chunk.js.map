{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovie","state","errorTitle","errorDesc","errorImg","errorImdb","errorId","SubmitCheck","event","preventDefault","newMovie","setState","props","onAdd","this","onSubmit","htmlFor","type","name","id","value","onChange","target","style","color","Component","App","moviesFromServer","addMovie","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6b60c184.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class NewMovie extends Component {\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n\n    errorTitle: false,\n    errorDesc: false,\n    errorImg: false,\n    errorImdb: false,\n    errorId: false,\n  };\n\n  SubmitCheck = (event) => {\n    event.preventDefault();\n    const { title, description, imgUrl, imdbUrl, imdbId } = this.state;\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    this.setState({\n      errorTitle: !title,\n      errorDesc: !description,\n      errorImg: !imgUrl,\n      errorImdb: !imdbUrl,\n      errorId: !imdbId,\n    });\n\n    if (!title || !description || !imgUrl || !imdbUrl || !imdbId) {\n      return;\n    }\n\n    this.props.onAdd(newMovie);\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      errorTitle,\n      errorDesc,\n      errorImg,\n      errorImdb,\n      errorId,\n    } = this.state;\n\n    return (\n      <form onSubmit={this.SubmitCheck}>\n        <label htmlFor=\"title\">Title</label>\n        <input\n          type=\"text\"\n          name=\"title\"\n          id=\"title\"\n          value={title}\n          onChange={(event) => {\n            this.setState({\n              title: event.target.value, errorTitle: false,\n            });\n          }}\n        />\n\n        <br />\n        {errorTitle && (\n          <span style={{ color: 'red' }}>Please enter the Title</span>\n        )}\n        <br />\n\n        <label htmlFor=\"description\">Description</label>\n        <input\n          type=\"text\"\n          name=\"description\"\n          id=\"description\"\n          value={description}\n          onChange={(event) => {\n            this.setState({\n              description: event.target.value, errorDesc: false,\n            });\n          }}\n        />\n\n        <br />\n        {errorDesc && (\n          <span style={{ color: 'red' }}>Please enter the Description</span>\n        )}\n        <br />\n\n        <label htmlFor=\"imgUrl\">Film Logo</label>\n        <input\n          type=\"url\"\n          name=\"imgUrl\"\n          id=\"imgUrl\"\n          value={imgUrl}\n          onChange={(event) => {\n            this.setState({\n              imgUrl: event.target.value, errorImg: false,\n            });\n          }}\n        />\n\n        <br />\n        {errorImg && (\n          <span style={{ color: 'red' }}>Please enter the correct Url</span>\n        )}\n        <br />\n\n        <label htmlFor=\"imdbUrl\">Film Url</label>\n        <input\n          type=\"url\"\n          name=\"imdbUrl\"\n          id=\"imdbUrl\"\n          value={imdbUrl}\n          onChange={(event) => {\n            this.setState({\n              imdbUrl: event.target.value, errorImdb: false,\n            });\n          }}\n        />\n\n        <br />\n        {errorImdb && (\n          <span style={{ color: 'red' }}>Please enter the correct Url</span>\n        )}\n        <br />\n\n        <label htmlFor=\"imdbId\">Film Id</label>\n        <input\n          type=\"text\"\n          name=\"imdbId\"\n          id=\"imdbId\"\n          value={imdbId}\n          onChange={(event) => {\n            this.setState({\n              imdbId: event.target.value, errorId: false,\n            });\n          }}\n        />\n\n        <br />\n        {errorId && (\n          <span style={{ color: 'red' }}>Please enter the Film Id</span>\n        )}\n        <br />\n\n        <button type=\"submit\">Add</button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  onAdd: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [\n        ...state.movies,\n        movie,\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}